[
	{
		"id": "CMS",
		"title": "Content Systems",
		"intro": "CMS",
		"detail": "From lean files to big databases. A timeline of scaling up to handle more and more complex projects.",
		"one-line": "Simplify Management",
		"thumbnail": "images/thumbnails/testing-image.jpg",
		"featured": true,
		"template": "one",
		"casestudy": {
			"p1": "The internet is made up of list and boxes. The architecture behind these elements keeps the all important data within control. In its simplest form a Content Management System (CMS) is a list of objects containing all the necessary materials needed to present the information to the user. ",
			"relation": "At this point you can start to see I use many of my favorite video games as inspirations for my projects"
		},
		"files": [
			{
				"title": "Legends",
				"git": "https://github.com/JesseDevs/pe-projects/tree/main/_projects/legends",
				"link": "https://peprojects.dev/alpha-4/jesse/_projects/legends/",
				"image": "images/background/landscape.jpg",
				"p": "The <em>‘Legends’</em> project showcases the initial ideas when approaching a CMS. A static data project. JSON is a standard in the industry as it is a lightweight data interchange format that is easy to read and write. By definition static is never changing and thus making this project only able to render the data onto a page. For any user to change the data they would need to be able to access the JSON file directly in the project. This allows a web page to be generated quickly, as the server does not need to query a database for every page load."
			},
			{
				"title": "Fighters",
				"git": "https://github.com/JesseDevs/pe-projects/tree/main/_projects/fighters-crud/",
				"link": "https://peprojects.dev/alpha-4/jesse/_projects/fighters-crud/",
				"image": "images/background/landscape.jpg",
				"p": "The <em>‘Fighters’</em> project is the next level up. This is a lean PHP CRUD (create, read, update, and delete) project that allows the user to create their own list of fighters to their liking. Aside from displaying the items in the frontend, there is also a form on the website that accepts a POST request on the backend to properly push the user’s inputted data into the JSON index file. The user can then choose to delete this created item or update it if there are any mistakes."
			},
			{
				"title": "Music: Wordpress",
				"git": "https://github.com/JesseDevs/pe-projects/tree/main/_projects/music-wordpress/",
				"link": "https://peprojects.dev/alpha-4/jesse/_projects/music-wordpress/",
				"image": "images/background/landscape.jpg",
				"p": "Some people would consider Wordpress the pinnacle of CMS’ as it is powers about 40% of all websites on the internet. In my <em>‘Music: Wordpress’</em> project, I got a proper idea as to why that is. The admin panel allows you to manage backend data with various plugins to make the user, creator, and overall quality efficient and simple. Advanced Custom Fields (ACF) is a great plugin that allows ways to add custom content to our system. I learned that creating many modules and themes could generate a quick work flow to output production ready websites in a flash."
			},
			{
				"title": "Dunkin",
				"git": "https://github.com/JesseDevs/super-shot",
				"link": "https://calm-super-shot.surge.sh/",
				"image": "images/background/landscape.jpg",
				"p": "In my <em>‘Dunkin’ Donuts: Vue App’</em>  I used Firebase, which is not a CMS but a NoSQL cloud database that provides many ways to manage aspects of a web application. This type of data is built by making a HTTP request to the Firebase API that is connected to my project. Essentially it works very similar to a giant JSON file that can hold many lists, filled with many objects, that are all easily accessed by database features."
			}
		]
	},
	{
		"id": "APP",
		"title": "Javascript Interfaces",
		"intro": "APP",
		"detail": "Small websites interactions to full scale interactive projects. Making button clicks work and moving screens slide.",
		"one-line": "Organized and Productive",
		"thumbnail": "images/thumbnails/cms-image.jpg",
		"featured": true,
		"template": "one",
		"casestudy": {
			"p1": "Javascript is most widely used programming language and has become a vital tool for developers. Though it is primarily a frontend language, there have been evolutions to make backends like Node and entire Frameworks that projects run on. This is a timeline showing a scaling of ideas and the process of understanding what is needed to properly make a website."
		},
		"files": [
			{
				"title": "Javascript Forms",
				"link": "https://peprojects.dev/alpha-4/jesse/?page=forms",
				"image": "images/background/landscape.jpg",
				"p": "There are some forms ready for user input in my <em>Forms</em> tab in my personal site. These were based on challenges from ‘Exercises for Programmers’ and were originally made purely with PHP server side rendering. Using Javascript I am able to showcase a few more tricks on the frontend when the user interacts with these items. For example, submitting a form saves a position on the screen to scroll to again."
			},
			{
				"title": "Workout App",
				"git": "https://github.com/JesseDevs/pe-projects/tree/main/_projects/workout-app//",
				"link": "https://peprojects.dev/alpha-4/jesse/_projects/workout-app/",
				"image": "images/background/landscape.jpg",
				"p": "My <em>Workout APP</em> took a simple interface from the forms and created more than just a short answer for the user. I tend to have to remember what is the main body focus for my workout and what types of sets will be needed. This app is a simple way to create short lists of workouts dedicated for the muscle group. This was built using local storage and Javascript class method to generate the app functionality, while using imports and exports to create templates for each page."
			},
			{
				"title": "Bill Split App",
				"git": "https://github.com/JesseDevs/pe-projects/tree/main/_projects/bill-app/",
				"link": "https://peprojects.dev/alpha-4/jesse/_projects/bill-app/",
				"image": "images/background/landscape.jpg",
				"p": "The <em>Bill Split APP</em> was inspited from a night out with friends and what ti took to even divide the bill. A interface that has a lot more personality and functionality. Using similar routing in Vanilla Javascript to create multiple page templates."
			},
			{
				"title": "Dunkin",
				"git": "https://github.com/JesseDevs/super-shot",
				"link": "https://calm-super-shot.surge.sh/",
				"image": "images/background/landscape.jpg",
				"p": "My <em>‘Dunkin’ Donuts: Vue App’</em> is built using Vue 3. A Javascript framework used for building user interfaces. The latest version of Vue is a versatile framework, using stores to pass variables and data to multiple components. Meaning this could be used for small one page sites to large multi-page projects. Reactive and Computed variables allows me the flexibility with live variables. To go along with this, I used Firebase to provide a database for users, products, and their items."
			}
		]
	},
	{
		"id": "Design",
		"title": "Layout Garden",
		"intro": "Design",
		"detail": "A collection of responsive layouts. Building out the internet is complicated... so let’s start a module at a time.",
		"one-line": "Organized and Productive",
		"thumbnail": "images/thumbnails/layout-image.jpg",
		"featured": true,
		"template": "one",
		"casestudy": {
			"p1": "X"
		},
		"files": [
			{
				"title": "Javascript Forms",
				"link": "https://peprojects.dev/alpha-4/jesse/?page=forms",
				"image": "images/background/landscape.jpg",
				"p": "X"
			}
		]
	}
]